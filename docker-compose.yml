version: "3.8"

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    restart: always
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic
        --no-input && gunicorn -b 0.0.0.0:8000 config.wsgi --reload"
    volumes:
      - .:/app
      - ./static:/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - cache

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - db
      - web
    ports:
      - "88:88"
      - "444:444"

  redis:
    image: redis:alpine

  cache:
   image: memcached
   ports:
     - "11211:11211"
   entrypoint:
    - memcached
    - -m 64

  flower:  
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:  
      - 5555:5555

  celery:
    restart: always
    build:
      context: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
    environment:
    - DEBUG=True
    - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
    - DJANGO_ALLOWED_HOSTS=localhost 0.0.0.0 127.0.0.1 [::1]
    depends_on:
      - db
      - redis

  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A config beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 0.0.0.0 127.0.0.1 [::1]
    depends_on:
      - db
      - redis

volumes:
  postgres_data: